shape dummy input
(141,)
erste conditional features
[10  8  5  7 11  3  3]
Dies ist der stage
len embed 128
das ist der stage index
[1]
<class 'numpy.ndarray'>
das ist das time embedding
[[nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan]]
cond feat nach Dense
128
[ -1.3880893   -7.2241516   -1.5955772   -5.6538615   -2.6236572
   5.4195275    8.645209    16.632738    -3.7065377   -0.5380528
  -6.864105    -4.3734236   -7.263309     8.581713    -2.2627127
 -10.951805     1.3706071    7.0071473   -2.4718094   -0.11492112
   6.138116   -15.623816     4.307314     9.585976    -1.7818613
   7.9883976   -6.1526413    5.098167     4.3146286    8.306476
  -4.47938      1.4028664    1.9926246   18.20748     11.254092
  -3.9477608   -9.127495    10.938296     1.7692866   -3.9472091
   4.9815226   -1.8590331   -2.896596    -1.9355787    0.68090343
 -10.736337     1.9230831   -2.2569304    7.8405075   -0.34946507
 -11.2165365    1.3889756    4.388414     6.0358853    1.545202
  -9.375855    -0.45201135   6.2415214    3.9525468   12.227073
   7.557827    -1.4878131    5.2451878   -2.0975206   -6.7518835
 -10.0967045   -7.3401604   -7.266289     2.1964223    4.041726
   0.5717908  -17.358149     1.3429285   -4.2139807   12.069285
  13.470959     5.667903     0.20359361   1.8462615   -0.25402182
   8.328888     1.8835089    2.724263    -7.4481654   -9.49464
 -17.062803   -12.130285    -1.9403255  -11.59826      1.0676727
  -7.544742    -1.1236218  -16.113916     1.8924737   -0.9196142
  -9.377539     9.734166     1.8671081   -1.6450682  -11.487395
  -0.55862856   9.8036      -6.4853086   13.841302     0.6423259
  -3.0637257   14.99183    -13.3036       1.6503528    8.115853
  -0.29219204  -4.1129594    6.175491     1.9624695    3.2002184
   3.1752207  -14.581012    -2.632465    13.020822    -5.83976
  -8.869735   -16.906954     1.7843921    9.07805      3.5373783
   3.2291503    6.427902    -4.366746  ]
conditional features
[[nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan]]
joint params
(1, 10)
joint params output
[[nan nan nan nan nan nan nan nan nan nan]]
Sizes fÃ¼r MLP
[128, 10]
params after reshape
(1, 5, 2)
Dies sind die parameter nach apply
[[[nan nan]
  [nan nan]
  [nan nan]
  [nan nan]
  [nan nan]]]
FrozenDict({
    params: {
        Dense_0: {
            bias: (128,),
            kernel: (7, 128),
        },
        Embed_0: {
            embedding: (1, 128),
        },
        MLP_0: {
            Dense_0: {
                bias: (128,),
                kernel: (128, 128),
            },
            Dense_1: {
                bias: (10,),
                kernel: (128, 10),
            },
        },
    },
})
feature shape
(7,)
target shape
(1, 5, 2)
in loss der shape von target ist
(1, 5, 2)
eval loss argumente
CondPiecewiseNN(
    # attributes
    num_vars = 1
    num_stages = 2
    hidden_size = 128
    num_pieces = 5
    num_layers = 1
    kernel_init = init
    bias_init = zeros
) FrozenDict({
    params: {
        Dense_0: {
            bias: Traced<ConcreteArray([0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
             0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
             0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
             0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
             0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
             0. 0. 0. 0. 0. 0. 0. 0.], dtype=float32)>with<JVPTrace(level=2/0)> with
              primal = DeviceArray([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                         0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)
              tangent = Traced<ShapedArray(float32[128])>with<JaxprTrace(level=1/0)> with
                pval = (ShapedArray(float32[128]), None)
                recipe = LambdaBinding(),
            kernel: Traced<ConcreteArray([[ 0.55475175 -0.06753054  0.19404848  0.16584201  0.02291627 -0.18373337
               0.42472953  0.37537038 -0.35632238  0.17485918 -0.5385295  -0.5774632
              -0.16182595  0.09185497 -0.51268893  0.25859076 -0.03773736  0.40172845
              -0.18002555  0.14590858  0.549504   -0.4287566   0.01181009  0.8117194
              -0.4581108   0.66425043 -0.42077363 -0.34751993  0.33742303 -0.01444747
              -0.43351185 -0.13573702 -0.18560317 -0.22549517  0.5888863   0.22002524
              -0.18263026  0.41939762 -0.25782058  0.06957064 -0.11392222  0.04885031
               0.4618194  -0.40838537  0.7255081  -0.15441163  0.3448533  -0.15205182
               0.12298646  0.26544583 -0.7301226   0.20647787 -0.19265357  0.63598585
               0.0132772  -0.1799086   0.23248869  0.11505441  0.29811046  0.7460515
               0.63889813  0.2583415  -0.43094185 -0.40064916 -0.5461523  -0.7941984
              -0.29853418  0.02639372 -0.29757902 -0.17278737 -0.04942713 -0.44906837
               0.30307716 -0.73935777  0.48995417  0.3648495   0.41390264  0.6099214
              -0.0207245  -0.6282032   0.4814136   0.21087268  0.32655102 -0.37144098
               0.1803819  -0.44911385 -0.06146101  0.5189127   0.44973308  0.45832396
              -0.57224965 -0.3359577  -0.5778504  -0.2846453  -0.1749473   0.04818046
               0.32735792  0.24460183 -0.0871745  -0.3472606   0.24268395 -0.08267762
              -0.18112741  0.2516246   0.26522592  0.06591763  0.5359406  -0.2516248
              -0.11556029  0.78707093 -0.28897673 -0.41260567  0.43480843  0.41502732
               0.64465517 -0.06663447 -0.33889598 -0.01195145 -0.0234169  -0.04466411
              -0.5867382  -0.58061105  0.56711745  0.40575144  0.05102694  0.02928657
               0.2595064  -0.0966092 ]
             [ 0.31675142 -0.6507522  -0.06312294 -0.23531088 -0.2256735   0.2535616
               0.7162027   0.7069221   0.5971308   0.43592075  0.00247353  0.38805205
               0.16568053  0.8070813  -0.740788   -0.40727106 -0.45911267 -0.20566915
              -0.04720974 -0.16179648  0.39530596  0.2475445   0.5163796   0.70154613
              -0.11493701  0.10209297  0.10515855  0.36822757 -0.20247123  0.20778972
              -0.49146402  0.35818315  0.7311349   0.6922529   0.44066793 -0.41921487
              -0.20106246 -0.14505604  0.20971312 -0.41911355  0.34478062 -0.5402881
              -0.03799671 -0.16273606  0.04882243  0.45236537 -0.3494384   0.4907824
              -0.20482367 -0.46380094 -0.12606888  0.03310857 -0.08970772 -0.47597927
              -0.275587    0.44804785 -0.28091475 -0.18711802 -0.13861571 -0.02807057
               0.17375804 -0.3514548   0.7494314  -0.04712825  0.5274229   0.49590677
              -0.32847542  0.32509142 -0.05732084  0.32930842  0.17985013 -0.01309145
               0.27589944 -0.16729489 -0.66711587 -0.05728956 -0.02369343 -0.18907548
               0.428394    0.8364259  -0.11623822 -0.7086314  -0.14860643  0.20481408
              -0.39635122  0.02382796 -0.34511465 -0.18564649 -0.7082511   0.10203246
              -0.2714912   0.19789393  0.24794999  0.10462989 -0.1665696  -0.44813538
               0.22240168  0.06743624  0.07847737 -0.01236499 -0.23624507  0.66254616
              -0.31078917  0.6066636   0.36235774 -0.29773456  0.84967387 -0.6032736
               0.03752748  0.09747442  0.56206846  0.18060812  0.05873274 -0.309513
              -0.1763276   0.15847996 -0.4209702  -0.651415    0.61652184 -0.04911046
              -0.4296085  -0.38352364  0.00543249  0.45543844 -0.4568821  -0.3405833
              -0.06005988 -0.21418507]
             [-0.45425788  0.65886766 -0.03068869  0.01708417  0.3534111   0.2303275
              -0.2795042   0.27477422 -0.07449573 -0.24314268  0.06412657 -0.77591866
              -0.06912962  0.12647028  0.40985087 -0.6883374  -0.25239518  0.6452034
              -0.46529528  0.43081623  0.42578226 -0.12671359  0.15524596 -0.41814083
              -0.00779611 -0.4725348  -0.3416918  -0.1631522  -0.4710416  -0.15326217
              -0.4622262  -0.22105284 -0.6523354  -0.26309597 -0.2679475  -0.06618748
              -0.54079133  0.17144418 -0.06846178  0.55313694 -0.8042826   0.42676154
               0.15592146  0.17384651 -0.44508845 -0.5172415  -0.25817809 -0.6856221
               0.23249054  0.28891805 -0.14545389  0.6287049   0.16901608  0.48189643
              -0.23825832 -0.60980856 -0.60403067  0.46212372 -0.35724708 -0.7426164
               0.26187515 -0.40721694 -0.04596798 -0.31281567  0.06069693  0.69890136
               0.09922994 -0.27301675  0.5447407  -0.37774616 -0.5718069  -0.46891543
               0.716396    0.3489848   0.4064688   0.6260505   0.48576385  0.5667443
               0.47007662 -0.720608   -0.26339287  0.38020673 -0.03391166  0.10006449
               0.17199428 -0.1660707   0.11134295 -0.0225184  -0.03148542 -0.32908225
               0.12329392  0.6917124  -0.32240865 -0.35408613 -0.64705664 -0.45174694
               0.3073774   0.11003261  0.5589743  -0.3228944   0.41342303 -0.05877727
              -0.5676784   0.23495929 -0.23552707 -0.5071464  -0.06063354 -0.04023881
              -0.24115244 -0.5647912   0.02253926 -0.17413995 -0.2537098   0.33401355
               0.21641974  0.49485913 -0.02831215  0.36802343 -0.59384644  0.02294831
              -0.62351435 -0.6505756  -0.24982017 -0.25204954 -0.14262     0.3895018
               0.6315952  -0.46195984]
             [-0.42039248 -0.435903   -0.5040393  -0.78213495  0.0199156  -0.60382855
               0.4049173   0.16241325 -0.20919178 -0.05861151  0.85110044  0.66078657
               0.05854966 -0.08414815  0.3296457  -0.26384628  0.10079335 -0.00607608
               0.45234907  0.07999667 -0.12555961 -0.6287296   0.17345847 -0.23298584
              -0.03269336  0.3339692   0.4535973   0.14381735  0.6783656  -0.2518375
               0.24691282  0.4424932  -0.6605788   0.6903532   0.06523308 -0.4391229
               0.66962314  0.29924738  0.14269967 -0.20037428  0.15683493 -0.3365131
              -0.3978865  -0.44379473 -0.15431829 -0.84923035  0.36265042  0.06973319
               0.1522264   0.31806    -0.63696057 -0.15348917  0.468689    0.4030737
              -0.13496287 -0.12396006  0.2753773   0.08359391  0.5828256   0.07384553
              -0.6034246   0.362917    0.17593825 -0.3003484  -0.10385556 -0.4039123
              -0.47700444 -0.46671042  0.35048357  0.3512985   0.19814618 -0.48130566
              -0.11604526 -0.27134997  0.43648288  0.11882002  0.07853681 -0.64585
              -0.07915837  0.84764206  0.7667704   0.05680143  0.13588956  0.16241956
              -0.2794088  -0.05104927 -0.1468832  -0.4582169  -0.4990911  -0.20644954
               0.03154268  0.70891654 -0.11352076  0.01039828  0.27141067  0.08399273
              -0.32267115 -0.32179427 -0.21881123 -0.803828   -0.5389555   0.60149956
               0.34121856  0.12303791 -0.79532725  0.16675037 -0.45668262 -0.46542808
               0.10933967  0.05155979 -0.16027392  0.46521685  0.40019283 -0.09268232
              -0.46453246 -0.06996478 -0.25153863  0.4255398   0.5080079  -0.8136118
              -0.18639146 -0.20281447 -0.3177351  -0.3923744   0.3748967  -0.1294186
              -0.19224943  0.10294119]
             [-0.3881379  -0.05204877  0.01899721 -0.00095543 -0.25453177  0.7007634
              -0.1316339   0.30822894 -0.22778206 -0.30068538 -0.6990523  -0.23454939
              -0.33330148  0.07754531  0.28937593 -0.4239021   0.26745328  0.1943251
              -0.05967341 -0.36816955 -0.37076688 -0.8158085  -0.16445522  0.02024845
               0.03654943  0.21429291 -0.38251317  0.5173232  -0.06459232  0.6908
               0.38610876 -0.17719923  0.21060552  0.8019488   0.18225771  0.0893062
              -0.8411192   0.31189135  0.44105718 -0.22147907  0.62815684  0.16758618
              -0.2860271   0.47985935 -0.2333911  -0.1653611  -0.00745891 -0.15605904
               0.25003642 -0.17888875  0.24900909 -0.0505086   0.11316623  0.0800624
               0.34276283 -0.6950418   0.11238508  0.51025325 -0.0567495   0.6434086
               0.2718798  -0.19339253  0.38954154  0.2884526  -0.537579   -0.41799384
               0.09064109 -0.16900696 -0.02420638 -0.01740859  0.20665424 -0.6390344
              -0.58085936  0.13415776  0.8045908   0.44449735 -0.25522763 -0.38926497
              -0.54303795 -0.06725262 -0.0969041   0.4261058   0.20896375 -0.80792236
              -0.5391485  -0.8556304  -0.62908596 -0.02985178 -0.66202885 -0.24409427
              -0.20576537 -0.8506972  -0.59796405  0.3267223   0.29932722 -0.31761277
               0.24038835  0.195356   -0.3598649  -0.2815512   0.20297956  0.09995028
              -0.37039804  0.45590448  0.11550464 -0.1323873   0.5045769  -0.19984919
               0.06362893  0.09398128 -0.12478665 -0.42781606  0.14858238 -0.24735431
              -0.03515715  0.12354157 -0.46341836 -0.18114442  0.6179741   0.2577729
               0.33037388 -0.09928241  0.13030863  0.31009993  0.0243554   0.48461
               0.3587964  -0.02766836]
             [-0.01218992 -0.44325525  0.13002236 -0.24780428  0.38390347  0.22826979
               0.19909832  0.18857256 -0.06573423 -0.3088254   0.30251038  0.3844481
              -0.48834518 -0.21627368  0.68672127 -0.04286404  0.7820918  -0.07167581
              -0.08705826  0.5526772   0.29163697  0.29330328 -0.27181223 -0.25782147
               0.5705605  -0.40658808  0.34717652  0.36567304  0.2233988   0.3025016
               0.04955951  0.37745893  0.6623035   0.29976004 -0.43183583  0.31819624
               0.65527964  0.34570095 -0.19957286  0.27037078 -0.32949203 -0.01166273
              -0.4513996   0.31117103 -0.03765887 -0.16565374 -0.00606873  0.2882783
               0.42518696 -0.03419627 -0.0632752  -0.08884177  0.4948546  -0.33278948
               0.44274962  0.20506081  0.34546924 -0.29360008  0.67461586  0.2163705
               0.23402269  0.21965355  0.15244487  0.47233266  0.01728262 -0.6657307
               0.39762148 -0.63473237  0.30420822  0.5876777   0.02896216 -0.2760375
               0.31281278  0.48786387 -0.32002357  0.2801245   0.14688268  0.60910493
               0.22564663 -0.76359147  0.3755059  -0.31309146 -0.26059732  0.25695997
              -0.00736735 -0.18195872  0.27046984  0.02489786  0.39614072  0.11467907
               0.3053621   0.07820909 -0.5229271   0.5217555   0.05768501 -0.22336991
               0.8452338  -0.08076581 -0.21192062  0.47947657 -0.15195514  0.3472278
               0.44043475 -0.26591277  0.03826432  0.15030211  0.02438867  0.12805104
               0.7678352   0.1228811   0.4412298  -0.13502596 -0.08253405  0.21164994
               0.23209056 -0.6398339   0.26619318 -0.4347229   0.6975989  -0.15537065
               0.03522109 -0.44108996 -0.62774575  0.34616798  0.6787652   0.29470602
               0.06716602  0.01870084]
             [ 0.01683482  0.10548551  0.01720118  0.23788412 -0.43525255 -0.02989195
              -0.63930976  0.25221926 -0.12691124  0.02866638 -0.33163026 -0.34080717
              -0.6344471   0.3196734  -0.2698643  -0.06647261  0.2296809  -0.15693906
              -0.07208693 -0.20061985 -0.18861344 -0.06264875  0.23072717  0.04291664
               0.62428385 -0.19447266 -0.36226016 -0.45032978  0.06904519  0.27050033
              -0.00856087 -0.42686734  0.52724487  0.56223285  0.6712214  -0.44215113
              -0.12987521  0.16163598 -0.7465706  -0.3426382   0.12160649  0.12936434
              -0.23490708 -0.17482401 -0.32626927 -0.6547966   0.04088299 -0.29029292
               0.6650778  -0.29805368 -0.09001325 -0.7292173   0.05910524 -0.54315174
               0.21817261 -0.07137062 -0.56990385 -0.34661338 -0.53759295  0.1535597
              -0.33312255 -0.09852231 -0.7282879   0.4541792   0.2584271  -0.06465703
              -0.358017   -0.5785426  -0.06422125  0.33107835 -0.4202703   0.26949137
              -0.40456244  0.5777182  -0.1571609   0.19631483  0.3689009  -0.08039612
               0.7088525   0.01223393  0.111219   -0.2008999  -0.5502911   0.3689129
              -0.35967433 -0.5389267  -0.724918   -0.6901648  -0.22820713  0.36657706
               0.28658286  0.4516227  -0.5886463   0.14677274  0.01072327 -0.14654152
               0.07440392 -0.44087395  0.6433136   0.32801044 -0.38894787 -0.24257989
               0.33840492  0.07282509  0.15026239  0.34426934  0.23715517 -0.22926171
              -0.01910112  0.17531605 -0.28026253  0.4311561  -0.52068675  0.45098543
               0.00812437  0.38324267 -0.5409786   0.39207694 -0.38483948 -0.5963613
               0.3723505  -0.31489906 -0.00238455  0.31143096  0.8222613  -0.5318185
              -0.549057    0.05009559]], dtype=float32)>with<JVPTrace(level=2/0)> with
              primal = DeviceArray([[ 0.55475175, -0.06753054,  0.19404848,  0.16584201,
                           0.02291627, -0.18373337,  0.42472953,  0.37537038,
                          -0.35632238,  0.17485918, -0.5385295 , -0.5774632 ,
                          -0.16182595,  0.09185497, -0.51268893,  0.25859076,
                          -0.03773736,  0.40172845, -0.18002555,  0.14590858,
                           0.549504  , -0.4287566 ,  0.01181009,  0.8117194 ,
                          -0.4581108 ,  0.66425043, -0.42077363, -0.34751993,
                           0.33742303, -0.01444747, -0.43351185, -0.13573702,
                          -0.18560317, -0.22549517,  0.5888863 ,  0.22002524,
                          -0.18263026,  0.41939762, -0.25782058,  0.06957064,
                          -0.11392222,  0.04885031,  0.4618194 , -0.40838537,
                           0.7255081 , -0.15441163,  0.3448533 , -0.15205182,
                           0.12298646,  0.26544583, -0.7301226 ,  0.20647787,
                          -0.19265357,  0.63598585,  0.0132772 , -0.1799086 ,
                           0.23248869,  0.11505441,  0.29811046,  0.7460515 ,
                           0.63889813,  0.2583415 , -0.43094185, -0.40064916,
                          -0.5461523 , -0.7941984 , -0.29853418,  0.02639372,
                          -0.29757902, -0.17278737, -0.04942713, -0.44906837,
                           0.30307716, -0.73935777,  0.48995417,  0.3648495 ,
                           0.41390264,  0.6099214 , -0.0207245 , -0.6282032 ,
                           0.4814136 ,  0.21087268,  0.32655102, -0.37144098,
                           0.1803819 , -0.44911385, -0.06146101,  0.5189127 ,
                           0.44973308,  0.45832396, -0.57224965, -0.3359577 ,
                          -0.5778504 , -0.2846453 , -0.1749473 ,  0.04818046,
                           0.32735792,  0.24460183, -0.0871745 , -0.3472606 ,
                           0.24268395, -0.08267762, -0.18112741,  0.2516246 ,
                           0.26522592,  0.06591763,  0.5359406 , -0.2516248 ,
                          -0.11556029,  0.78707093, -0.28897673, -0.41260567,
                           0.43480843,  0.41502732,  0.64465517, -0.06663447,
                          -0.33889598, -0.01195145, -0.0234169 , -0.04466411,
                          -0.5867382 , -0.58061105,  0.56711745,  0.40575144,
                           0.05102694,  0.02928657,  0.2595064 , -0.0966092 ],
                         [ 0.31675142, -0.6507522 , -0.06312294, -0.23531088,
                          -0.2256735 ,  0.2535616 ,  0.7162027 ,  0.7069221 ,
                           0.5971308 ,  0.43592075,  0.00247353,  0.38805205,
                           0.16568053,  0.8070813 , -0.740788  , -0.40727106,
                          -0.45911267, -0.20566915, -0.04720974, -0.16179648,
                           0.39530596,  0.2475445 ,  0.5163796 ,  0.70154613,
                          -0.11493701,  0.10209297,  0.10515855,  0.36822757,
                          -0.20247123,  0.20778972, -0.49146402,  0.35818315,
                           0.7311349 ,  0.6922529 ,  0.44066793, -0.41921487,
                          -0.20106246, -0.14505604,  0.20971312, -0.41911355,
                           0.34478062, -0.5402881 , -0.03799671, -0.16273606,
                           0.04882243,  0.45236537, -0.3494384 ,  0.4907824 ,
                          -0.20482367, -0.46380094, -0.12606888,  0.03310857,
                          -0.08970772, -0.47597927, -0.275587  ,  0.44804785,
                          -0.28091475, -0.18711802, -0.13861571, -0.02807057,
                           0.17375804, -0.3514548 ,  0.7494314 , -0.04712825,
                           0.5274229 ,  0.49590677, -0.32847542,  0.32509142,
                          -0.05732084,  0.32930842,  0.17985013, -0.01309145,
                           0.27589944, -0.16729489, -0.66711587, -0.05728956,
                          -0.02369343, -0.18907548,  0.428394  ,  0.8364259 ,
                          -0.11623822, -0.7086314 , -0.14860643,  0.20481408,
                          -0.39635122,  0.02382796, -0.34511465, -0.18564649,
                          -0.7082511 ,  0.10203246, -0.2714912 ,  0.19789393,
                           0.24794999,  0.10462989, -0.1665696 , -0.44813538,
                           0.22240168,  0.06743624,  0.07847737, -0.01236499,
                          -0.23624507,  0.66254616, -0.31078917,  0.6066636 ,
                           0.36235774, -0.29773456,  0.84967387, -0.6032736 ,
                           0.03752748,  0.09747442,  0.56206846,  0.18060812,
                           0.05873274, -0.309513  , -0.1763276 ,  0.15847996,
                          -0.4209702 , -0.651415  ,  0.61652184, -0.04911046,
                          -0.4296085 , -0.38352364,  0.00543249,  0.45543844,
                          -0.4568821 , -0.3405833 , -0.06005988, -0.21418507],
                         [-0.45425788,  0.65886766, -0.03068869,  0.01708417,
                           0.3534111 ,  0.2303275 , -0.2795042 ,  0.27477422,
                          -0.07449573, -0.24314268,  0.06412657, -0.77591866,
                          -0.06912962,  0.12647028,  0.40985087, -0.6883374 ,
                          -0.25239518,  0.6452034 , -0.46529528,  0.43081623,
                           0.42578226, -0.12671359,  0.15524596, -0.41814083,
                          -0.00779611, -0.4725348 , -0.3416918 , -0.1631522 ,
                          -0.4710416 , -0.15326217, -0.4622262 , -0.22105284,
                          -0.6523354 , -0.26309597, -0.2679475 , -0.06618748,
                          -0.54079133,  0.17144418, -0.06846178,  0.55313694,
                          -0.8042826 ,  0.42676154,  0.15592146,  0.17384651,
                          -0.44508845, -0.5172415 , -0.25817809, -0.6856221 ,
                           0.23249054,  0.28891805, -0.14545389,  0.6287049 ,
                           0.16901608,  0.48189643, -0.23825832, -0.60980856,
                          -0.60403067,  0.46212372, -0.35724708, -0.7426164 ,
                           0.26187515, -0.40721694, -0.04596798, -0.31281567,
                           0.06069693,  0.69890136,  0.09922994, -0.27301675,
                           0.5447407 , -0.37774616, -0.5718069 , -0.46891543,
                           0.716396  ,  0.3489848 ,  0.4064688 ,  0.6260505 ,
                           0.48576385,  0.5667443 ,  0.47007662, -0.720608  ,
                          -0.26339287,  0.38020673, -0.03391166,  0.10006449,
                           0.17199428, -0.1660707 ,  0.11134295, -0.0225184 ,
                          -0.03148542, -0.32908225,  0.12329392,  0.6917124 ,
                          -0.32240865, -0.35408613, -0.64705664, -0.45174694,
                           0.3073774 ,  0.11003261,  0.5589743 , -0.3228944 ,
                           0.41342303, -0.05877727, -0.5676784 ,  0.23495929,
                          -0.23552707, -0.5071464 , -0.06063354, -0.04023881,
                          -0.24115244, -0.5647912 ,  0.02253926, -0.17413995,
                          -0.2537098 ,  0.33401355,  0.21641974,  0.49485913,
                          -0.02831215,  0.36802343, -0.59384644,  0.02294831,
                          -0.62351435, -0.6505756 , -0.24982017, -0.25204954,
                          -0.14262   ,  0.3895018 ,  0.6315952 , -0.46195984],
                         [-0.42039248, -0.435903  , -0.5040393 , -0.78213495,
                           0.0199156 , -0.60382855,  0.4049173 ,  0.16241325,
                          -0.20919178, -0.05861151,  0.85110044,  0.66078657,
                           0.05854966, -0.08414815,  0.3296457 , -0.26384628,
                           0.10079335, -0.00607608,  0.45234907,  0.07999667,
                          -0.12555961, -0.6287296 ,  0.17345847, -0.23298584,
                          -0.03269336,  0.3339692 ,  0.4535973 ,  0.14381735,
                           0.6783656 , -0.2518375 ,  0.24691282,  0.4424932 ,
                          -0.6605788 ,  0.6903532 ,  0.06523308, -0.4391229 ,
                           0.66962314,  0.29924738,  0.14269967, -0.20037428,
                           0.15683493, -0.3365131 , -0.3978865 , -0.44379473,
                          -0.15431829, -0.84923035,  0.36265042,  0.06973319,
                           0.1522264 ,  0.31806   , -0.63696057, -0.15348917,
                           0.468689  ,  0.4030737 , -0.13496287, -0.12396006,
                           0.2753773 ,  0.08359391,  0.5828256 ,  0.07384553,
                          -0.6034246 ,  0.362917  ,  0.17593825, -0.3003484 ,
                          -0.10385556, -0.4039123 , -0.47700444, -0.46671042,
                           0.35048357,  0.3512985 ,  0.19814618, -0.48130566,
                          -0.11604526, -0.27134997,  0.43648288,  0.11882002,
                           0.07853681, -0.64585   , -0.07915837,  0.84764206,
                           0.7667704 ,  0.05680143,  0.13588956,  0.16241956,
                          -0.2794088 , -0.05104927, -0.1468832 , -0.4582169 ,
                          -0.4990911 , -0.20644954,  0.03154268,  0.70891654,
                          -0.11352076,  0.01039828,  0.27141067,  0.08399273,
                          -0.32267115, -0.32179427, -0.21881123, -0.803828  ,
                          -0.5389555 ,  0.60149956,  0.34121856,  0.12303791,
                          -0.79532725,  0.16675037, -0.45668262, -0.46542808,
                           0.10933967,  0.05155979, -0.16027392,  0.46521685,
                           0.40019283, -0.09268232, -0.46453246, -0.06996478,
                          -0.25153863,  0.4255398 ,  0.5080079 , -0.8136118 ,
                          -0.18639146, -0.20281447, -0.3177351 , -0.3923744 ,
                           0.3748967 , -0.1294186 , -0.19224943,  0.10294119],
                         [-0.3881379 , -0.05204877,  0.01899721, -0.00095543,
                          -0.25453177,  0.7007634 , -0.1316339 ,  0.30822894,
                          -0.22778206, -0.30068538, -0.6990523 , -0.23454939,
                          -0.33330148,  0.07754531,  0.28937593, -0.4239021 ,
                           0.26745328,  0.1943251 , -0.05967341, -0.36816955,
                          -0.37076688, -0.8158085 , -0.16445522,  0.02024845,
                           0.03654943,  0.21429291, -0.38251317,  0.5173232 ,
                          -0.06459232,  0.6908    ,  0.38610876, -0.17719923,
                           0.21060552,  0.8019488 ,  0.18225771,  0.0893062 ,
                          -0.8411192 ,  0.31189135,  0.44105718, -0.22147907,
                           0.62815684,  0.16758618, -0.2860271 ,  0.47985935,
                          -0.2333911 , -0.1653611 , -0.00745891, -0.15605904,
                           0.25003642, -0.17888875,  0.24900909, -0.0505086 ,
                           0.11316623,  0.0800624 ,  0.34276283, -0.6950418 ,
                           0.11238508,  0.51025325, -0.0567495 ,  0.6434086 ,
                           0.2718798 , -0.19339253,  0.38954154,  0.2884526 ,
                          -0.537579  , -0.41799384,  0.09064109, -0.16900696,
                          -0.02420638, -0.01740859,  0.20665424, -0.6390344 ,
                          -0.58085936,  0.13415776,  0.8045908 ,  0.44449735,
                          -0.25522763, -0.38926497, -0.54303795, -0.06725262,
                          -0.0969041 ,  0.4261058 ,  0.20896375, -0.80792236,
                          -0.5391485 , -0.8556304 , -0.62908596, -0.02985178,
                          -0.66202885, -0.24409427, -0.20576537, -0.8506972 ,
                          -0.59796405,  0.3267223 ,  0.29932722, -0.31761277,
                           0.24038835,  0.195356  , -0.3598649 , -0.2815512 ,
                           0.20297956,  0.09995028, -0.37039804,  0.45590448,
                           0.11550464, -0.1323873 ,  0.5045769 , -0.19984919,
                           0.06362893,  0.09398128, -0.12478665, -0.42781606,
                           0.14858238, -0.24735431, -0.03515715,  0.12354157,
                          -0.46341836, -0.18114442,  0.6179741 ,  0.2577729 ,
                           0.33037388, -0.09928241,  0.13030863,  0.31009993,
                           0.0243554 ,  0.48461   ,  0.3587964 , -0.02766836],
                         [-0.01218992, -0.44325525,  0.13002236, -0.24780428,
                           0.38390347,  0.22826979,  0.19909832,  0.18857256,
                          -0.06573423, -0.3088254 ,  0.30251038,  0.3844481 ,
                          -0.48834518, -0.21627368,  0.68672127, -0.04286404,
                           0.7820918 , -0.07167581, -0.08705826,  0.5526772 ,
                           0.29163697,  0.29330328, -0.27181223, -0.25782147,
                           0.5705605 , -0.40658808,  0.34717652,  0.36567304,
                           0.2233988 ,  0.3025016 ,  0.04955951,  0.37745893,
                           0.6623035 ,  0.29976004, -0.43183583,  0.31819624,
                           0.65527964,  0.34570095, -0.19957286,  0.27037078,
                          -0.32949203, -0.01166273, -0.4513996 ,  0.31117103,
                          -0.03765887, -0.16565374, -0.00606873,  0.2882783 ,
                           0.42518696, -0.03419627, -0.0632752 , -0.08884177,
                           0.4948546 , -0.33278948,  0.44274962,  0.20506081,
                           0.34546924, -0.29360008,  0.67461586,  0.2163705 ,
                           0.23402269,  0.21965355,  0.15244487,  0.47233266,
                           0.01728262, -0.6657307 ,  0.39762148, -0.63473237,
                           0.30420822,  0.5876777 ,  0.02896216, -0.2760375 ,
                           0.31281278,  0.48786387, -0.32002357,  0.2801245 ,
                           0.14688268,  0.60910493,  0.22564663, -0.76359147,
                           0.3755059 , -0.31309146, -0.26059732,  0.25695997,
                          -0.00736735, -0.18195872,  0.27046984,  0.02489786,
                           0.39614072,  0.11467907,  0.3053621 ,  0.07820909,
                          -0.5229271 ,  0.5217555 ,  0.05768501, -0.22336991,
                           0.8452338 , -0.08076581, -0.21192062,  0.47947657,
                          -0.15195514,  0.3472278 ,  0.44043475, -0.26591277,
                           0.03826432,  0.15030211,  0.02438867,  0.12805104,
                           0.7678352 ,  0.1228811 ,  0.4412298 , -0.13502596,
                          -0.08253405,  0.21164994,  0.23209056, -0.6398339 ,
                           0.26619318, -0.4347229 ,  0.6975989 , -0.15537065,
                           0.03522109, -0.44108996, -0.62774575,  0.34616798,
                           0.6787652 ,  0.29470602,  0.06716602,  0.01870084],
                         [ 0.01683482,  0.10548551,  0.01720118,  0.23788412,
                          -0.43525255, -0.02989195, -0.63930976,  0.25221926,
                          -0.12691124,  0.02866638, -0.33163026, -0.34080717,
                          -0.6344471 ,  0.3196734 , -0.2698643 , -0.06647261,
                           0.2296809 , -0.15693906, -0.07208693, -0.20061985,
                          -0.18861344, -0.06264875,  0.23072717,  0.04291664,
                           0.62428385, -0.19447266, -0.36226016, -0.45032978,
                           0.06904519,  0.27050033, -0.00856087, -0.42686734,
                           0.52724487,  0.56223285,  0.6712214 , -0.44215113,
                          -0.12987521,  0.16163598, -0.7465706 , -0.3426382 ,
                           0.12160649,  0.12936434, -0.23490708, -0.17482401,
                          -0.32626927, -0.6547966 ,  0.04088299, -0.29029292,
                           0.6650778 , -0.29805368, -0.09001325, -0.7292173 ,
                           0.05910524, -0.54315174,  0.21817261, -0.07137062,
                          -0.56990385, -0.34661338, -0.53759295,  0.1535597 ,
                          -0.33312255, -0.09852231, -0.7282879 ,  0.4541792 ,
                           0.2584271 , -0.06465703, -0.358017  , -0.5785426 ,
                          -0.06422125,  0.33107835, -0.4202703 ,  0.26949137,
                          -0.40456244,  0.5777182 , -0.1571609 ,  0.19631483,
                           0.3689009 , -0.08039612,  0.7088525 ,  0.01223393,
                           0.111219  , -0.2008999 , -0.5502911 ,  0.3689129 ,
                          -0.35967433, -0.5389267 , -0.724918  , -0.6901648 ,
                          -0.22820713,  0.36657706,  0.28658286,  0.4516227 ,
                          -0.5886463 ,  0.14677274,  0.01072327, -0.14654152,
                           0.07440392, -0.44087395,  0.6433136 ,  0.32801044,
                          -0.38894787, -0.24257989,  0.33840492,  0.07282509,
                           0.15026239,  0.34426934,  0.23715517, -0.22926171,
                          -0.01910112,  0.17531605, -0.28026253,  0.4311561 ,
                          -0.52068675,  0.45098543,  0.00812437,  0.38324267,
                          -0.5409786 ,  0.39207694, -0.38483948, -0.5963613 ,
                           0.3723505 , -0.31489906, -0.00238455,  0.31143096,
                           0.8222613 , -0.5318185 , -0.549057  ,  0.05009559]],            dtype=float32)
              tangent = Traced<ShapedArray(float32[7,128])>with<JaxprTrace(level=1/0)> with
                pval = (ShapedArray(float32[7,128]), None)
                recipe = LambdaBinding(),
        },
        Embed_0: {
            embedding: Traced<ConcreteArray([[-0.0215044   0.19555031  0.01034785 -0.02099725  0.01620907  0.02110198
               0.00567051 -0.12457695  0.04713939  0.00508189  0.04013478  0.06627797
              -0.11708667  0.04405545  0.12099962 -0.04361261 -0.06726594 -0.05187108
               0.08583767  0.12492975  0.1754447  -0.02976808  0.15247527 -0.03673357
              -0.19003043 -0.0919717  -0.00078815  0.01175736  0.10427666  0.02067777
               0.01185337  0.23031701 -0.02745946  0.08193719  0.00817044  0.11908219
               0.17573409  0.00392638  0.0681408   0.07791106  0.01213619 -0.04493981
              -0.0540656  -0.15920737 -0.00576162  0.06029205  0.06352208  0.0789313
              -0.11306756  0.05470345  0.06087232  0.12232881 -0.09844857  0.02418815
               0.02349742 -0.16389985 -0.15217286 -0.03623653 -0.05091361 -0.11981063
               0.02559833 -0.15928476 -0.17164695 -0.01406834  0.13811058  0.11297936
              -0.01674523  0.05869564  0.07303733  0.20754197  0.04280715 -0.03798652
               0.0721965   0.0159315   0.07871386  0.15922068 -0.03225041 -0.00712288
               0.07279074 -0.11056931  0.02313371  0.06922577  0.02462296 -0.05706705
               0.02520841 -0.06151809  0.06597835 -0.00826369 -0.01679111 -0.02495702
               0.08311763  0.05024258 -0.01803395  0.07854241  0.0397253  -0.08253725
               0.06436016 -0.11929115 -0.04785279  0.00372689 -0.10061399 -0.01072568
               0.2065859   0.09269734  0.05953961 -0.03582047 -0.2249781   0.11227416
              -0.06625801 -0.09081876  0.00186911 -0.01340535 -0.01100652  0.11152569
               0.00130172  0.0129337  -0.04599774 -0.02570022 -0.00725935  0.14570144
              -0.0110506   0.00959108  0.05364796  0.01063338  0.02399896  0.00097792
               0.04615487 -0.12704238]], dtype=float32)>with<JVPTrace(level=2/0)> with
              primal = DeviceArray([[-0.0215044 ,  0.19555031,  0.01034785, -0.02099725,
                           0.01620907,  0.02110198,  0.00567051, -0.12457695,
                           0.04713939,  0.00508189,  0.04013478,  0.06627797,
                          -0.11708667,  0.04405545,  0.12099962, -0.04361261,
                          -0.06726594, -0.05187108,  0.08583767,  0.12492975,
                           0.1754447 , -0.02976808,  0.15247527, -0.03673357,
                          -0.19003043, -0.0919717 , -0.00078815,  0.01175736,
                           0.10427666,  0.02067777,  0.01185337,  0.23031701,
                          -0.02745946,  0.08193719,  0.00817044,  0.11908219,
                           0.17573409,  0.00392638,  0.0681408 ,  0.07791106,
                           0.01213619, -0.04493981, -0.0540656 , -0.15920737,
                          -0.00576162,  0.06029205,  0.06352208,  0.0789313 ,
                          -0.11306756,  0.05470345,  0.06087232,  0.12232881,
                          -0.09844857,  0.02418815,  0.02349742, -0.16389985,
                          -0.15217286, -0.03623653, -0.05091361, -0.11981063,
                           0.02559833, -0.15928476, -0.17164695, -0.01406834,
                           0.13811058,  0.11297936, -0.01674523,  0.05869564,
                           0.07303733,  0.20754197,  0.04280715, -0.03798652,
                           0.0721965 ,  0.0159315 ,  0.07871386,  0.15922068,
                          -0.03225041, -0.00712288,  0.07279074, -0.11056931,
                           0.02313371,  0.06922577,  0.02462296, -0.05706705,
                           0.02520841, -0.06151809,  0.06597835, -0.00826369,
                          -0.01679111, -0.02495702,  0.08311763,  0.05024258,
                          -0.01803395,  0.07854241,  0.0397253 , -0.08253725,
                           0.06436016, -0.11929115, -0.04785279,  0.00372689,
                          -0.10061399, -0.01072568,  0.2065859 ,  0.09269734,
                           0.05953961, -0.03582047, -0.2249781 ,  0.11227416,
                          -0.06625801, -0.09081876,  0.00186911, -0.01340535,
                          -0.01100652,  0.11152569,  0.00130172,  0.0129337 ,
                          -0.04599774, -0.02570022, -0.00725935,  0.14570144,
                          -0.0110506 ,  0.00959108,  0.05364796,  0.01063338,
                           0.02399896,  0.00097792,  0.04615487, -0.12704238]],            dtype=float32)
              tangent = Traced<ShapedArray(float32[1,128])>with<JaxprTrace(level=1/0)> with
                pval = (ShapedArray(float32[1,128]), None)
                recipe = LambdaBinding(),
        },
        MLP_0: {
            Dense_0: {
                bias: Traced<ConcreteArray([0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
                 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
                 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
                 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
                 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
                 0. 0. 0. 0. 0. 0. 0. 0.], dtype=float32)>with<JVPTrace(level=2/0)> with
                  primal = DeviceArray([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                             0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                             0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                             0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                             0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                             0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                             0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                             0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                             0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)
                  tangent = Traced<ShapedArray(float32[128])>with<JaxprTrace(level=1/0)> with
                    pval = (ShapedArray(float32[128]), None)
                    recipe = LambdaBinding(),
                kernel: Traced<ConcreteArray([[ 0.06906171  0.03723884 -0.14500871 ... -0.13827772  0.06238793
                   0.00636254]
                 [-0.0559744  -0.0234824  -0.09709685 ...  0.01890257  0.16781314
                  -0.02072098]
                 [ 0.04409613 -0.01620956 -0.16157308 ...  0.07526758 -0.01772197
                  -0.04946452]
                 ...
                 [-0.10067537 -0.08632138 -0.00080905 ... -0.13371918 -0.17119615
                  -0.02809531]
                 [-0.09262086 -0.11952603  0.06040214 ...  0.07753046  0.02021939
                  -0.08752225]
                 [ 0.02330056  0.00496305 -0.09306596 ...  0.05123104 -0.09292708
                  -0.01589745]], dtype=float32)>with<JVPTrace(level=2/0)> with
                  primal = DeviceArray([[ 0.06906171,  0.03723884, -0.14500871, ..., -0.13827772,
                               0.06238793,  0.00636254],
                             [-0.0559744 , -0.0234824 , -0.09709685, ...,  0.01890257,
                               0.16781314, -0.02072098],
                             [ 0.04409613, -0.01620956, -0.16157308, ...,  0.07526758,
                              -0.01772197, -0.04946452],
                             ...,
                             [-0.10067537, -0.08632138, -0.00080905, ..., -0.13371918,
                              -0.17119615, -0.02809531],
                             [-0.09262086, -0.11952603,  0.06040214, ...,  0.07753046,
                               0.02021939, -0.08752225],
                             [ 0.02330056,  0.00496305, -0.09306596, ...,  0.05123104,
                              -0.09292708, -0.01589745]], dtype=float32)
                  tangent = Traced<ShapedArray(float32[128,128])>with<JaxprTrace(level=1/0)> with
                    pval = (ShapedArray(float32[128,128]), None)
                    recipe = LambdaBinding(),
            },
            Dense_1: {
                bias: Traced<ConcreteArray([0. 0. 0. 0. 0. 0. 0. 0. 0. 0.], dtype=float32)>with<JVPTrace(level=2/0)> with
                  primal = DeviceArray([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)
                  tangent = Traced<ShapedArray(float32[10])>with<JaxprTrace(level=1/0)> with
                    pval = (ShapedArray(float32[10]), None)
                    recipe = LambdaBinding(),
                kernel: Traced<ConcreteArray([[ 0.02815403  0.11498316  0.04162556 ... -0.04217839  0.0761534
                  -0.09194757]
                 [-0.00728651  0.07526823  0.11398366 ...  0.09662148 -0.03182409
                  -0.06495939]
                 [ 0.15649354 -0.06379195 -0.00578338 ...  0.08232571  0.05513061
                  -0.06560689]
                 ...
                 [ 0.08411451 -0.1288851  -0.03340965 ...  0.03422561 -0.01773277
                  -0.01524557]
                 [ 0.10193592  0.02856474  0.11237866 ...  0.01396543  0.02647907
                  -0.0273819 ]
                 [ 0.13441418  0.12465817  0.00515443 ...  0.12498021 -0.06115305
                  -0.14390583]], dtype=float32)>with<JVPTrace(level=2/0)> with
                  primal = DeviceArray([[ 0.02815403,  0.11498316,  0.04162556, ..., -0.04217839,
                               0.0761534 , -0.09194757],
                             [-0.00728651,  0.07526823,  0.11398366, ...,  0.09662148,
                              -0.03182409, -0.06495939],
                             [ 0.15649354, -0.06379195, -0.00578338, ...,  0.08232571,
                               0.05513061, -0.06560689],
                             ...,
                             [ 0.08411451, -0.1288851 , -0.03340965, ...,  0.03422561,
                              -0.01773277, -0.01524557],
                             [ 0.10193592,  0.02856474,  0.11237866, ...,  0.01396543,
                               0.02647907, -0.0273819 ],
                             [ 0.13441418,  0.12465817,  0.00515443, ...,  0.12498021,
                              -0.06115305, -0.14390583]], dtype=float32)
                  tangent = Traced<ShapedArray(float32[128,10])>with<JaxprTrace(level=1/0)> with
                    pval = (ShapedArray(float32[128,10]), None)
                    recipe = LambdaBinding(),
            },
        },
    },
}) [10  8  5  7 11  3  3] [1] [[[2 1]
  [2 1]
  [2 1]
  [2 1]
  [2 1]]]
erste conditional features
[10  8  5  7 11  3  3]
Dies ist der stage
len embed 128
das ist der stage index
[1]
<class 'numpy.ndarray'>
das ist das time embedding
Traced<ConcreteArray([[nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan]], dtype=float32)>with<JVPTrace(level=2/0)> with
  primal = DeviceArray([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan]], dtype=float32)
  tangent = Traced<ShapedArray(float32[1,128])>with<JaxprTrace(level=1/0)> with
    pval = (ShapedArray(float32[1,128]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x121921660>, in_tracers=(Traced<ConcreteArray([[1]], dtype=int32):JaxprTrace(level=1/0)>, Traced<ShapedArray(float32[1,128]):JaxprTrace(level=1/0)>), out_tracer_refs=[<weakref at 0x121ba1220; to 'JaxprTracer' at 0x121ba1130>], out_avals=[ShapedArray(float32[1,128])], primitive=xla_call, params={'device': None, 'backend': None, 'name': 'jvp(_take)', 'donated_invars': (False, False), 'inline': False, 'keep_unused': False, 'call_jaxpr': { lambda ; a:i32[1,1] b:f32[1,128]. let
    c:f32[1,128] = gather[
      dimension_numbers=GatherDimensionNumbers(offset_dims=(1,), collapsed_slice_dims=(0,), start_index_map=(0,))
      fill_value=0
      indices_are_sorted=False
      mode=GatherScatterMode.FILL_OR_DROP
      slice_sizes=(1, 128)
      unique_indices=False
    ] b a
  in (c,) }}, effects=set(), source_info=SourceInfo(traceback=<jaxlib.xla_extension.Traceback object at 0x121ab3830>, name_stack=NameStack(stack=(Transform(name='jvp'),))))
cond feat nach Dense
128
Traced<ConcreteArray([ -1.3880893   -7.2241516   -1.5955772   -5.6538615   -2.6236572
   5.4195275    8.645209    16.632738    -3.7065377   -0.5380528
  -6.864105    -4.3734236   -7.263309     8.581713    -2.2627127
 -10.951805     1.3706071    7.0071473   -2.4718094   -0.11492112
   6.138116   -15.623816     4.307314     9.585976    -1.7818613
   7.9883976   -6.1526413    5.098167     4.3146286    8.306476
  -4.47938      1.4028664    1.9926246   18.20748     11.254092
  -3.9477608   -9.127495    10.938296     1.7692866   -3.9472091
   4.9815226   -1.8590331   -2.896596    -1.9355787    0.68090343
 -10.736337     1.9230831   -2.2569304    7.8405075   -0.34946507
 -11.2165365    1.3889756    4.388414     6.0358853    1.545202
  -9.375855    -0.45201135   6.2415214    3.9525468   12.227073
   7.557827    -1.4878131    5.2451878   -2.0975206   -6.7518835
 -10.0967045   -7.3401604   -7.266289     2.1964223    4.041726
   0.5717908  -17.358149     1.3429285   -4.2139807   12.069285
  13.470959     5.667903     0.20359361   1.8462615   -0.25402182
   8.328888     1.8835089    2.724263    -7.4481654   -9.49464
 -17.062803   -12.130285    -1.9403255  -11.59826      1.0676727
  -7.544742    -1.1236218  -16.113916     1.8924737   -0.9196142
  -9.377539     9.734166     1.8671081   -1.6450682  -11.487395
  -0.55862856   9.8036      -6.4853086   13.841302     0.6423259
  -3.0637257   14.99183    -13.3036       1.6503528    8.115853
  -0.29219204  -4.1129594    6.175491     1.9624695    3.2002184
   3.1752207  -14.581012    -2.632465    13.020822    -5.83976
  -8.869735   -16.906954     1.7843921    9.07805      3.5373783
   3.2291503    6.427902    -4.366746  ], dtype=float32)>with<JVPTrace(level=2/0)> with
  primal = DeviceArray([ -1.3880893 ,  -7.2241516 ,  -1.5955772 ,  -5.6538615 ,
              -2.6236572 ,   5.4195275 ,   8.645209  ,  16.632738  ,
              -3.7065377 ,  -0.5380528 ,  -6.864105  ,  -4.3734236 ,
              -7.263309  ,   8.581713  ,  -2.2627127 , -10.951805  ,
               1.3706071 ,   7.0071473 ,  -2.4718094 ,  -0.11492112,
               6.138116  , -15.623816  ,   4.307314  ,   9.585976  ,
              -1.7818613 ,   7.9883976 ,  -6.1526413 ,   5.098167  ,
               4.3146286 ,   8.306476  ,  -4.47938   ,   1.4028664 ,
               1.9926246 ,  18.20748   ,  11.254092  ,  -3.9477608 ,
              -9.127495  ,  10.938296  ,   1.7692866 ,  -3.9472091 ,
               4.9815226 ,  -1.8590331 ,  -2.896596  ,  -1.9355787 ,
               0.68090343, -10.736337  ,   1.9230831 ,  -2.2569304 ,
               7.8405075 ,  -0.34946507, -11.2165365 ,   1.3889756 ,
               4.388414  ,   6.0358853 ,   1.545202  ,  -9.375855  ,
              -0.45201135,   6.2415214 ,   3.9525468 ,  12.227073  ,
               7.557827  ,  -1.4878131 ,   5.2451878 ,  -2.0975206 ,
              -6.7518835 , -10.0967045 ,  -7.3401604 ,  -7.266289  ,
               2.1964223 ,   4.041726  ,   0.5717908 , -17.358149  ,
               1.3429285 ,  -4.2139807 ,  12.069285  ,  13.470959  ,
               5.667903  ,   0.20359361,   1.8462615 ,  -0.25402182,
               8.328888  ,   1.8835089 ,   2.724263  ,  -7.4481654 ,
              -9.49464   , -17.062803  , -12.130285  ,  -1.9403255 ,
             -11.59826   ,   1.0676727 ,  -7.544742  ,  -1.1236218 ,
             -16.113916  ,   1.8924737 ,  -0.9196142 ,  -9.377539  ,
               9.734166  ,   1.8671081 ,  -1.6450682 , -11.487395  ,
              -0.55862856,   9.8036    ,  -6.4853086 ,  13.841302  ,
               0.6423259 ,  -3.0637257 ,  14.99183   , -13.3036    ,
               1.6503528 ,   8.115853  ,  -0.29219204,  -4.1129594 ,
               6.175491  ,   1.9624695 ,   3.2002184 ,   3.1752207 ,
             -14.581012  ,  -2.632465  ,  13.020822  ,  -5.83976   ,
              -8.869735  , -16.906954  ,   1.7843921 ,   9.07805   ,
               3.5373783 ,   3.2291503 ,   6.427902  ,  -4.366746  ],            dtype=float32)
  tangent = Traced<ShapedArray(float32[128])>with<JaxprTrace(level=1/0)> with
    pval = (ShapedArray(float32[128]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x121921500>, in_tracers=(Traced<ShapedArray(float32[128]):JaxprTrace(level=1/0)>, Traced<ShapedArray(float32[128]):JaxprTrace(level=1/0)>), out_tracer_refs=[<weakref at 0x121bb8680; to 'JaxprTracer' at 0x121bb86d0>], out_avals=[ShapedArray(float32[128])], primitive=xla_call, params={'device': None, 'backend': None, 'name': 'jvp(fn)', 'donated_invars': (False, False), 'inline': True, 'keep_unused': False, 'call_jaxpr': { lambda ; a:f32[128] b:f32[128]. let c:f32[128] = add a b in (c,) }}, effects=set(), source_info=SourceInfo(traceback=<jaxlib.xla_extension.Traceback object at 0x121af68f0>, name_stack=NameStack(stack=(Transform(name='jvp'),))))
conditional features
Traced<ConcreteArray([[nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan]], dtype=float32)>with<JVPTrace(level=2/0)> with
  primal = DeviceArray([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
              nan, nan, nan, nan, nan, nan, nan, nan]], dtype=float32)
  tangent = Traced<ShapedArray(float32[1,128])>with<JaxprTrace(level=1/0)> with
    pval = (ShapedArray(float32[1,128]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x121921650>, in_tracers=(Traced<ConcreteArray([[nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan
  nan nan]], dtype=float32):JaxprTrace(level=1/0)>, Traced<ConcreteArray([[ -1.3880893   -7.2241516   -1.5955772   -5.6538615   -2.6236572
    5.4195275    8.645209    16.632738    -3.7065377   -0.5380528
   -6.864105    -4.3734236   -7.263309     8.581713    -2.2627127
  -10.951805     1.3706071    7.0071473   -2.4718094   -0.11492112
    6.138116   -15.623816     4.307314     9.585976    -1.7818613
    7.9883976   -6.1526413    5.098167     4.3146286    8.306476
   -4.47938      1.4028664    1.9926246   18.20748     11.254092
   -3.9477608   -9.127495    10.938296     1.7692866   -3.9472091
    4.9815226   -1.8590331   -2.896596    -1.9355787    0.68090343
  -10.736337     1.9230831   -2.2569304    7.8405075   -0.34946507
  -11.2165365    1.3889756    4.388414     6.0358853    1.545202
   -9.375855    -0.45201135   6.2415214    3.9525468   12.227073
    7.557827    -1.4878131    5.2451878   -2.0975206   -6.7518835
  -10.0967045   -7.3401604   -7.266289     2.1964223    4.041726
    0.5717908  -17.358149     1.3429285   -4.2139807   12.069285
   13.470959     5.667903     0.20359361   1.8462615   -0.25402182
    8.328888     1.8835089    2.724263    -7.4481654   -9.49464
  -17.062803   -12.130285    -1.9403255  -11.59826      1.0676727
   -7.544742    -1.1236218  -16.113916     1.8924737   -0.9196142
   -9.377539     9.734166     1.8671081   -1.6450682  -11.487395
   -0.55862856   9.8036      -6.4853086   13.841302     0.6423259
   -3.0637257   14.99183    -13.3036       1.6503528    8.115853
   -0.29219204  -4.1129594    6.175491     1.9624695    3.2002184
    3.1752207  -14.581012    -2.632465    13.020822    -5.83976
   -8.869735   -16.906954     1.7843921    9.07805      3.5373783
    3.2291503    6.427902    -4.366746  ]], dtype=float32):JaxprTrace(level=1/0)>, Traced<ShapedArray(float32[128]):JaxprTrace(level=1/0)>, Traced<ShapedArray(float32[1,128]):JaxprTrace(level=1/0)>), out_tracer_refs=[<weakref at 0x121bb8ef0; to 'JaxprTracer' at 0x121bb8c70>], out_avals=[ShapedArray(float32[1,128])], primitive=xla_call, params={'device': None, 'backend': None, 'name': 'jvp(fn)', 'donated_invars': (False, False, False, False), 'inline': True, 'keep_unused': False, 'call_jaxpr': { lambda ; a:f32[1,128] b:f32[1,128] c:f32[128] d:f32[1,128]. let
    e:f32[1,128] = broadcast_in_dim[broadcast_dimensions=(1,) shape=(1, 128)] c
    f:f32[1,128] = mul e a
    g:f32[1,128] = mul b d
    h:f32[1,128] = add_any f g
  in (h,) }}, effects=set(), source_info=SourceInfo(traceback=<jaxlib.xla_extension.Traceback object at 0x121b702f0>, name_stack=NameStack(stack=(Transform(name='jvp'),))))
joint params
(1, 10)
joint params output
Traced<ConcreteArray([[nan nan nan nan nan nan nan nan nan nan]], dtype=float32)>with<JVPTrace(level=2/0)> with
  primal = DeviceArray([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]], dtype=float32)
  tangent = Traced<ShapedArray(float32[1,10])>with<JaxprTrace(level=1/0)> with
    pval = (ShapedArray(float32[1,10]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x1219218f0>, in_tracers=(Traced<ShapedArray(float32[1,10]):JaxprTrace(level=1/0)>, Traced<ShapedArray(float32[1,10]):JaxprTrace(level=1/0)>), out_tracer_refs=[<weakref at 0x121bc9d60; to 'JaxprTracer' at 0x121bc9db0>], out_avals=[ShapedArray(float32[1,10])], primitive=xla_call, params={'device': None, 'backend': None, 'name': 'jvp(fn)', 'donated_invars': (False, False), 'inline': True, 'keep_unused': False, 'call_jaxpr': { lambda ; a:f32[1,10] b:f32[1,10]. let c:f32[1,10] = add a b in (c,) }}, effects=set(), source_info=SourceInfo(traceback=<jaxlib.xla_extension.Traceback object at 0x121badc30>, name_stack=NameStack(stack=(Transform(name='jvp'),))))
Sizes fÃ¼r MLP
[128, 10]
params after reshape
(1, 5, 2)
Dies sind die parameter nach apply
Traced<ConcreteArray([[[nan nan]
  [nan nan]
  [nan nan]
  [nan nan]
  [nan nan]]], dtype=float32)>with<JVPTrace(level=2/0)> with
  primal = DeviceArray([[[nan, nan],
              [nan, nan],
              [nan, nan],
              [nan, nan],
              [nan, nan]]], dtype=float32)
  tangent = Traced<ShapedArray(float32[1,5,2])>with<JaxprTrace(level=1/0)> with
    pval = (ShapedArray(float32[1,5,2]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x121921970>, in_tracers=(Traced<ShapedArray(float32[1,10]):JaxprTrace(level=1/0)>,), out_tracer_refs=[<weakref at 0x121bc98b0; to 'JaxprTracer' at 0x121bc9ae0>], out_avals=[ShapedArray(float32[1,5,2])], primitive=reshape, params={'new_sizes': (1, 5, 2), 'dimensions': None}, effects=set(), source_info=SourceInfo(traceback=<jaxlib.xla_extension.Traceback object at 0x121b6f530>, name_stack=NameStack(stack=(Transform(name='jvp'),))))
pred_params
(1, 5, 2)
Traced<ConcreteArray([[[nan nan]
  [nan nan]
  [nan nan]
  [nan nan]
  [nan nan]]], dtype=float32)>with<JVPTrace(level=2/0)> with
  primal = DeviceArray([[[nan, nan],
              [nan, nan],
              [nan, nan],
              [nan, nan],
              [nan, nan]]], dtype=float32)
  tangent = Traced<ShapedArray(float32[1,5,2])>with<JaxprTrace(level=1/0)> with
    pval = (ShapedArray(float32[1,5,2]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x121921970>, in_tracers=(Traced<ShapedArray(float32[1,10]):JaxprTrace(level=1/0)>,), out_tracer_refs=[<weakref at 0x121bc98b0; to 'JaxprTracer' at 0x121bc9ae0>], out_avals=[ShapedArray(float32[1,5,2])], primitive=reshape, params={'new_sizes': (1, 5, 2), 'dimensions': None}, effects=set(), source_info=SourceInfo(traceback=<jaxlib.xla_extension.Traceback object at 0x121b6f530>, name_stack=NameStack(stack=(Transform(name='jvp'),))))
target
(1, 5, 2)
LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
(1, 5, 2)
(1, 5, 2)
LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
pred_parameters
Traced<ConcreteArray([[[nan nan]
  [nan nan]
  [nan nan]
  [nan nan]
  [nan nan]]], dtype=float32)>with<JVPTrace(level=2/0)> with
  primal = DeviceArray([[[nan, nan],
              [nan, nan],
              [nan, nan],
              [nan, nan],
              [nan, nan]]], dtype=float32)
  tangent = Traced<ShapedArray(float32[1,5,2])>with<JaxprTrace(level=1/0)> with
    pval = (ShapedArray(float32[1,5,2]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x121921970>, in_tracers=(Traced<ShapedArray(float32[1,10]):JaxprTrace(level=1/0)>,), out_tracer_refs=[<weakref at 0x121bc98b0; to 'JaxprTracer' at 0x121bc9ae0>], out_avals=[ShapedArray(float32[1,5,2])], primitive=reshape, params={'new_sizes': (1, 5, 2), 'dimensions': None}, effects=set(), source_info=SourceInfo(traceback=<jaxlib.xla_extension.Traceback object at 0x121b6f530>, name_stack=NameStack(stack=(Transform(name='jvp'),))))
points_x
[[[2 1]
  [2 1]
  [2 1]
  [2 1]
  [2 1]]]
Traced<ConcreteArray([[[nan nan]
  [nan nan]
  [nan nan]
  [nan nan]
  [nan nan]]], dtype=float32)>with<JVPTrace(level=2/0)> with
  primal = DeviceArray([[[nan, nan],
              [nan, nan],
              [nan, nan],
              [nan, nan],
              [nan, nan]]], dtype=float32)
  tangent = Traced<ShapedArray(float32[1,5,2])>with<JaxprTrace(level=1/0)> with
    pval = (ShapedArray(float32[1,5,2]), None)
    recipe = JaxprEqnRecipe(eqn_id=<object object at 0x121921970>, in_tracers=(Traced<ShapedArray(float32[1,10]):JaxprTrace(level=1/0)>,), out_tracer_refs=[<weakref at 0x121bc98b0; to 'JaxprTracer' at 0x121bc9ae0>], out_avals=[ShapedArray(float32[1,5,2])], primitive=reshape, params={'new_sizes': (1, 5, 2), 'dimensions': None}, effects=set(), source_info=SourceInfo(traceback=<jaxlib.xla_extension.Traceback object at 0x121b6f530>, name_stack=NameStack(stack=(Transform(name='jvp'),))))
points_y
